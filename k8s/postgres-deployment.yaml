apiVersion: apps/v1                          # Each API version defines a different set of 'objects' we can use                                                 
kind: Deployment                             # Type of Object we're creating (i.e. StatefulSet, ReplicaController, Pod, Service)                                
metadata:                                                                                                                                                       
  name: postgres-deployment                  # Name of the deployment                                                                                           
spec:                                                                                                                                                           
  replicas: 1                                # With Postgres, more than 1 database writing to the Volume is bad. That requires a postgres master, worker etc.   
  selector:                                                                                                                                                     
    matchLabels:                                                                                                                                                
      component: postgres                    # Which template to use for these pods (Listed below)                                                              
  template:                                  # Configuration to be used by all PODS in this deployment                                                          
    metadata:                                                                                                                                                   
      labels:                                                                                                                                                   
         component: postgres                 # Label of pod                                                                                                     
    spec:                                                                                                                                                       
      volumes:                               # Allocates the storage
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim # Name in name: database-persistent-volume-claim.yaml      
      containers:                            # List of container(s) to include on pod                                                                           
        - name: postgres                     # Human readable logging                                                                                           
          image: postgres                    # Using the public version not custom                                                                              
          ports:                                                                                                                                                
            - containerPort: 5432            # Works with a Service Object to exposes this port to the outside world
          volumeMounts:
            - name: postgres-storage         # Mounts the volume labeled allocated in the volumes
              mountPath: /var/lib/postgresql/data # Default spot postgres stores data
              subPath: postgres              # Any data inside the mount path will be stored in this nested folder 
          env:
            - name: PGPASSWORD
              valueFrom: 
                secretKeyRef:
                  name: pgpassword           # Must match kubectl get secrets
                  key: PGPASSWORD            # Must match key used in kubectl secrets command  
                                                            
